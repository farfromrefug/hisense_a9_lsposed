// Generated by view binder compiler. Do not edit!
package com.akylas.hisensea9.lsposed.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akylas.hisensea9.lsposed.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView api;

  @NonNull
  public final TextView binder;

  @NonNull
  public final TextView framework;

  @NonNull
  public final TextView frameworkVersion;

  @NonNull
  public final TextView frameworkVersionCode;

  @NonNull
  public final Button randomPrefs;

  @NonNull
  public final Button remoteFile;

  @NonNull
  public final Button requestScope;

  @NonNull
  public final TextView scope;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull TextView api,
      @NonNull TextView binder, @NonNull TextView framework, @NonNull TextView frameworkVersion,
      @NonNull TextView frameworkVersionCode, @NonNull Button randomPrefs,
      @NonNull Button remoteFile, @NonNull Button requestScope, @NonNull TextView scope) {
    this.rootView = rootView;
    this.api = api;
    this.binder = binder;
    this.framework = framework;
    this.frameworkVersion = frameworkVersion;
    this.frameworkVersionCode = frameworkVersionCode;
    this.randomPrefs = randomPrefs;
    this.remoteFile = remoteFile;
    this.requestScope = requestScope;
    this.scope = scope;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.api;
      TextView api = ViewBindings.findChildViewById(rootView, id);
      if (api == null) {
        break missingId;
      }

      id = R.id.binder;
      TextView binder = ViewBindings.findChildViewById(rootView, id);
      if (binder == null) {
        break missingId;
      }

      id = R.id.framework;
      TextView framework = ViewBindings.findChildViewById(rootView, id);
      if (framework == null) {
        break missingId;
      }

      id = R.id.framework_version;
      TextView frameworkVersion = ViewBindings.findChildViewById(rootView, id);
      if (frameworkVersion == null) {
        break missingId;
      }

      id = R.id.framework_version_code;
      TextView frameworkVersionCode = ViewBindings.findChildViewById(rootView, id);
      if (frameworkVersionCode == null) {
        break missingId;
      }

      id = R.id.random_prefs;
      Button randomPrefs = ViewBindings.findChildViewById(rootView, id);
      if (randomPrefs == null) {
        break missingId;
      }

      id = R.id.remote_file;
      Button remoteFile = ViewBindings.findChildViewById(rootView, id);
      if (remoteFile == null) {
        break missingId;
      }

      id = R.id.request_scope;
      Button requestScope = ViewBindings.findChildViewById(rootView, id);
      if (requestScope == null) {
        break missingId;
      }

      id = R.id.scope;
      TextView scope = ViewBindings.findChildViewById(rootView, id);
      if (scope == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, api, binder, framework,
          frameworkVersion, frameworkVersionCode, randomPrefs, remoteFile, requestScope, scope);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
